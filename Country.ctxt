#BlueJ class context
comment0.target=Country
comment0.text=\r\n\ The\ Country\ class\ represents\ a\ country\ with\ a\ network\ of\ cities\r\n\ and\ roads,\ which\ is\ represented\ by\ the\ fieldvariable\ of\ the\ type\r\n\ Map<City,\ List<Road>>.\ Every\ city\ is\ depicted\ in\ a\ List<Road>\ -\r\n\ a\ list\ containing\ all\ the\ roads\ starting\ in\ the\ given\ city.\r\n\r\n\ @author\ Lasse\ Sode\ &\ Timm\ Ask\u00F8e\r\n\ @version\ 1.0.0\r\n
comment1.params=name\ network
comment1.target=Country(java.lang.String,\ java.util.Map)
comment1.text=\r\n\ Creates\ a\ new\ Country\ object.\r\n\ @param\ name\ The\ name\ of\ the\ Country.\r\n\ @param\ network\ The\ network\ of\ Roads\ for\ each\ city.\r\n
comment10.params=
comment10.target=void\ reset()
comment10.text=\r\n\ Resets\ the\ values\ of\ all\ the\ cities\ in\ the\ country.\r\n
comment11.params=value
comment11.target=int\ bonus(int)
comment11.text=\r\n\ Calculates\ the\ size\ of\ the\ bonus\ which\ the\ player\ recieves,\r\n\ when\ entering\ a\ City.\r\n\ @param\ value\ the\ value\ of\ the\ City.\r\n\ @return\ An\ integer\ representing\ how\ much\ of\ the\ city's\ value\ the\ player\ recieved\ as\ a\ bonus.\r\n
comment12.params=a\ b\ length
comment12.target=void\ addRoads(City,\ City,\ int)
comment12.text=\r\n\ Adds\ roads\ between\ City\ a\ &\ City\ B,\ with\ a\ given\ length.\r\n\ If\ both\ Cities\ are\ a\ part\ of\ the\ same\ country,\ 2\ Roads\ going\r\n\ between\ both\ cities\ are\ created.\r\n\ If\ only\ one\ of\ the\ Cities\ are\ a\ part\ of\ the\ country,\ one\ Road\ from\r\n\ the\ City\ in\ the\ country\ to\ the\ other\ country's\ City\ is\ created.\r\n\ If\ none\ of\ the\ Cities\ are\ located\ in\ the\ country,\ no\ Roads\ are\ created.\r\n\ @param\ a\ City\ a.\r\n\ @param\ b\ City\ b.\r\n\ @param\ length\ The\ length\ of\ the\ Road.\r\n
comment13.params=city
comment13.target=Position\ position(City)
comment13.text=\r\n\ Returns\ the\ Position\ of\ the\ city.\ As\ if\ the\ player\ is\ standing\r\n\ in\ the\ City,\ without\ having\ chosen\ a\ direction\ yet.\r\n\ @param\ city\ the\ City\ which\ position\ is\ searched\ for.\r\n\ @return\ a\ Position\ object\ looking\ like\ Position(city,\ city,\ 0).\r\n
comment14.params=from\ to
comment14.target=Position\ readyToTravel(City,\ City)
comment14.text=\r\n\ Returns\ a\ Position\ object,\ representing\ the\ player\ being\ ready\ to\r\n\ start\ his\ travel\ from\ "from"\ towards\ "to",\ while\ still\ standing\ in\ "from".\r\n\ If\ "from"\ and\ "to"\ are\ the\ same\ cities,\ the\ position\ of\ the\ City\ is\ returned.\r\n\ If\ there\ are\ no\ direct\ way\ from\ "from"\ towards\ "to",\ or\ "from"\ isn't\r\n\ a\ part\ of\ the\ Country,\ the\ position\r\n\ of\ the\ City\ is\ returned.\r\n\ @param\ from\ The\ City\ which\ the\ player\ is\ standing\ in.\r\n\ @param\ to\ The\ City\ which\ the\ player\ is\ readt\ to\ travel\ to.\r\n\ @return\ a\ Position\ object.\r\n
comment15.params=
comment15.target=int\ hashCode()
comment16.params=otherCo
comment16.target=boolean\ equals(java.lang.Object)
comment2.params=
comment2.target=Game\ getGame()
comment2.text=\r\n\ Returns\ a\ reference\ to\ the\ game\ which\ the\ country\ is\ a\ part\ of.\r\n\ @return\ game\ Game.\r\n
comment3.params=game
comment3.target=void\ setGame(Game)
comment3.text=\r\n\ Mutator\ method\ which\ sets\ which\ game\ the\ country\ belongs\ in.\r\n\ @param\ game\ the\ game\ which\ the\ country\ should\ be\ a\ part\ of.\r\n
comment4.params=
comment4.target=java.util.Map\ getNetwork()
comment4.text=\r\n\ Returns\ the\ Country's\ network.\r\n\ @return\ returns\ a\ Map<City,\ List<Road>>\ representing\ the\ country's\ network.\r\n
comment5.params=
comment5.target=Country\ getCountry()
comment5.text=\r\n\ Get\ the\ country\ object.\r\n\ @return\ A\ reference\ to\ the\ Country\ object.\ Overfl\u00F8dig\ og\ meningsl\u00F8s.\r\n
comment6.params=
comment6.target=java.lang.String\ getName()
comment6.text=\r\n\ Get\ the\ name\ of\ the\ country.\r\n\ @return\ A\ String\ with\ the\ name\ of\ the\ Country.\r\n
comment7.params=city
comment7.target=java.util.List\ getRoads(City)
comment7.text=\r\n\ Returns\ all\ roads\ starting\ in\ City.\ If\ the\ City\ doesn't\r\n\ exist\ in\ the\ current\ country,\ an\ empty\ list\ is\ returned.\r\n\ @param\ city\ The\ starting\ City.\r\n\ @return\ Roads\ starting\ in\ the\ City.\r\n
comment8.params=
comment8.target=java.util.List\ getCities()
comment8.text=\r\n\ Returns\ a\ sorted\ list\ of\ all\ cities\ in\ the\ country.\r\n\ @return\ Sorted\ ArrayList\ of\ all\ cities\ in\ the\ country.\r\n
comment9.params=name
comment9.target=City\ getCity(java.lang.String)
comment9.text=\r\n\ Gets\ the\ City\ which\ is\ represented\ by\ a\ string\ equal\ to\ the\r\n\ parameter\ name.\ If\ this\ City\ doesn't\ exist,\ null\ is\ returned.\r\n\ @param\ name\ The\ name\ of\ the\ City\ searched\ for.\r\n\ @return\ the\ City\ object\ or\ null.\r\n
numComments=17
